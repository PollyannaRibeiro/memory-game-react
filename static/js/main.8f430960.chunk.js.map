{"version":3,"sources":["logo.svg","components/Card2/Card2.js","components/Timer/Timer.js","components/Score/Score.js","components/Moves/Moves.js","components/StateReset/StateReset.js","components/CongratsPage/Congrats.js","components/Deck/Deck.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card2","className","this","props","cardOpened","cardMatch","cardError","react_default","a","createElement","concat","cardIcon","Component","TimerState","Initial","Stated","Ended","Timer","state","timeCounter","prevProps","console","log","setState","previousState","clearInterval","interval","setupTimer","_this2","time1","Date","setInterval","diff","getTime","totalTime","Math","floor","finalTime","id","Score","movesCounting","movements","stars","scoreDown","map","icon","index","key","Moves","moves","StateReset","CongratsPage","isItFinished","starResult","movesDone","timeDone","phrase","Deck","cards","deckLocked","cardQuantity","gameState","setupDeck","cardsIconOption","iconsNeeded","cardsIcons","i","push","array","temp","length","j","random","shuffle","cardOnDeck","open","match","error","definingCardDeck","forEach","card","intervalId","cardsOpened","filter","matchCards","closingCard","every","event","_this3","currentTarget","getAttribute","updateCards","resetClicked","_this4","components_Score_Score","components_Moves_Moves","components_Timer_Timer","onClick","onResetClicker","bind","components_StateReset_StateReset","identifier","onCardCliked","components_Card2_Card2","CongratsPage_Congrats","App","components_Deck_Deck","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mRCyBzBC,4MAVX,IAAIC,EAAYC,KAAKC,MAAMC,WAAa,OAAQ,GAC5CC,EAAYH,KAAKC,MAAME,UAAY,QAAS,GAC5CC,EAAYJ,KAAKC,MAAMG,UAAY,QAAS,GAEhD,OACEC,EAAAC,EAAAC,cAAA,OAAKR,UAAS,QAAAS,OAAYT,EAAZ,QAAAS,OAA4BR,KAAKC,MAAMQ,SAAvC,KAAAD,OAAmDL,EAAnD,KAAAK,OAAgEJ,YAhBhEM,cCAPC,SAAa,CACxBC,QAAS,UACTC,OAAQ,SACRC,MAAO,UA8DMC,6MAtDbC,MAAQ,CACNC,YAAY,qFAMKC,GAEbA,EAAUF,QAAUhB,KAAKC,MAAMe,QAInCG,QAAQC,IAAIpB,KAAKC,MAAMe,OAEnBhB,KAAKC,MAAMe,QAAUL,EAAWC,SAClCZ,KAAKqB,SAAS,SAACC,GAEb,OADAA,EAAcL,YAAc,EACrBK,IAETC,cAAcvB,KAAKwB,WACVxB,KAAKC,MAAMe,QAAUL,EAAWE,OACzCb,KAAKyB,aACIzB,KAAKC,MAAMe,QAAUL,EAAWG,OACzCS,cAAcvB,KAAKwB,gDAIX,IAAAE,EAAA1B,KACVA,KAAK2B,MAAQ,IAAIC,KAEjB5B,KAAKwB,SAAWK,YAAY,WAE1B,IAEMC,GAFM,IAAIF,MAEGG,UAAYL,EAAKC,MAAMI,UACtCC,EAAYC,KAAKC,MAAMJ,EAAK,KAKhC,OAJAJ,EAAKL,SAAS,SAACC,GAEb,OADAA,EAAcL,YAAce,EACrBV,IAEFU,GACN,sCAKH,IAAIG,EAAYnC,KAAKgB,MAAMC,YAC3B,OACEZ,EAAAC,EAAAC,cAAA,QAAM6B,GAAG,SAAT,UAAA5B,OAA4B2B,WAtDdzB,aCoDL2B,6LAjCX,IAAIC,EAAgBtC,KAAKC,MAAMsC,UAE/B,OAAGD,GAAe,GAAKA,EAAgB,GACrCtC,KAAKwC,MAAS,CAAC,UAAW,UAAW,WAC9BxC,KAAKwC,OAEJF,GAAiB,GAAKA,EAAc,GAC5CtC,KAAKwC,MAAS,CAAC,UAAW,UAAW,aAC9BxC,KAAKwC,OAELF,GAAe,GACtBtC,KAAKwC,MAAS,CAAC,UAAW,YAAa,aAChCxC,KAAKwC,YAFR,mCAON,IAAIA,EAAQxC,KAAKyC,YAEjB,OACEpC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,MAAIR,UAAU,SAEVyC,EAAME,IAAI,SAACC,EAAMC,GAAP,OACRvC,EAAAC,EAAAC,cAAA,MAAIR,UAAS,MAAAS,OAAQmC,GAAQE,IAAG,OAAArC,OAAUoC,gBA9CpClC,cCSLoC,mLAPX,IAAIC,EAAQ/C,KAAKC,MAAMsC,UAAU,EAAI,QAAS,OAC9C,OACElC,EAAAC,EAAAC,cAAA,QAAMR,UAAU,SAAhB,GAAAS,OAA4BR,KAAKC,MAAMsC,UAAvC,KAAA/B,OAAoDuC,WARtCrC,aCQLsC,0LANX,OACE3C,EAAAC,EAAAC,cAAA,OAAKR,UAAU,gCAHIW,cC8CVuC,oNAnCbjC,MAAQ,2EAKNG,QAAQC,IAAIpB,KAAKC,MAAMiD,cACvB,IAAIC,EAAanD,KAAKC,MAAMkD,WAC5B,OAAkB,IAAfA,EACM,WACiB,IAAfA,EACF,kBACgB,IAAfA,EACD,iCACgB,IAAfA,EACD,qCADF,mCASP,OACE9C,EAAAC,EAAAC,cAAA,OAAKR,UAAU,eACZM,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,oBAAAC,OAAeR,KAAKC,MAAMmD,UAA1B,eAAA5C,OAAiDR,KAAKC,MAAMkD,WAA5D,gBACA9C,EAAAC,EAAAC,cAAA,wBAAAC,OAAmBR,KAAKC,MAAMoD,SAA9B,aACAhD,EAAAC,EAAAC,cAAA,YAAAC,OAAOR,KAAKsD,mBAvCM5C,cCqOZ6C,6MAvNbvC,MAAQ,CACNwC,MAAM,GACNC,YAAY,EACZC,aAAc,EACdC,UAAWhD,EAAWC,QACtB2B,UAAU,EAEVY,WAAW,EACXC,UAAW,EACXC,SAAS,sFAKTrD,KAAK4D,gDAWL,IANA,IAAIC,EAAkB,CAAC,aAAc,mBAAoB,YAAa,UAAW,UAAW,UAAW,aACnG,UAAW,SAAU,YAAa,iBAAkB,mBAAoB,SAAU,eAClF,WAAY,UAAW,WAAY,aAEnCC,EAAc9D,KAAKgB,MAAM0C,aAAa,EACtCK,EAAa,GACTC,EAAI,EAAGA,EAAEF,EAAaE,IAC5BD,EAAWE,KAAKJ,EAAgBG,IAChCD,EAAWE,KAAKJ,EAAgBG,IAoBlCD,EAfA,SAAiBG,GAKf,IAJA,IAEIC,EAFAH,EAAIE,EAAME,OACVC,EAAI,EAGDL,KACHK,EAAIpC,KAAKC,MAAMD,KAAKqC,UAAYN,EAAE,IAElCG,EAAOD,EAAMF,GACbE,EAAMF,GAAKE,EAAMG,GACjBH,EAAMG,GAAKF,EAEf,OAAOD,EAGIK,CAAQR,GAGrB,IAAIS,EAAa,IAEjB,WACE,IAAK,IAAIR,EAAG,EAAGA,EAAGD,EAAWK,OAAQJ,IACnCQ,EAAWP,KAAK,CAACtB,KAAI,GAAAnC,OAAIuD,EAAWC,IAAMS,MAAM,EAAOC,OAAO,EAAOC,OAAO,IAGhFC,GAEA5E,KAAKqB,SAAS,SAACC,GAEb,OADAA,EAAckC,MAAQgB,EACflD,uCAKA4C,GACTA,EAAMW,QAAQ,SAACC,GACbA,EAAKL,MAAO,EACZK,EAAKJ,OAAQ,wCAILR,GACVA,EAAMW,QAAQ,SAACC,GACVA,EAAKL,OAASK,EAAKJ,QACpBI,EAAKL,MAAO,yCAKNnD,GAAc,IAAAI,EAAA1B,KACrBsB,EAAcqC,YAAchD,EAAWC,UACtCU,EAAcqC,UAAYhD,EAAWE,QAIzCS,EAAciB,YAEd,IAaQwC,EAbJC,EAAchF,KAAKgB,MAAMwC,MAAMyB,OAAO,SAACH,GAAU,OAAOA,EAAKL,OAASK,EAAKJ,SAE5EM,EAAYZ,OAAO,GACpBY,EAAYH,QAAQ,SAACC,GACnBA,EAAKL,MAAO,IAIU,IAAvBO,EAAYZ,UAEVY,EAAY,GAAGrC,OAASqC,EAAY,GAAGrC,KACxC3C,KAAKkF,WAAW,CAACF,EAAY,GAAIA,EAAY,MAG7C1D,EAAcmC,YAAa,EAC3BuB,EAAYH,QAAQ,SAACC,GACnBA,EAAKH,OAAQ,IAGfI,EAAalD,YAAY,WACvBN,cAAcwD,GACdrD,EAAKL,SAAS,SAACC,GAMb,OALAI,EAAKyD,YAAYH,GACjB1D,EAAcmC,YAAa,EAC3BuB,EAAYH,QAAQ,SAACC,GACnBA,EAAKH,OAAQ,IAERrD,KAER,OAIatB,KAAKgB,MAAMwC,MAAM4B,MAAM,SAACN,GAAD,OAAQA,EAAKJ,UAEtDpD,EAAcqC,UAAYhD,EAAWG,MACrCQ,EAAc4B,cAAe,wCAIpBmC,GAAM,IAAAC,EAAAtF,KACb4C,EAAQyC,EAAME,cAAcC,aAAa,cAG1CxF,KAAKgB,MAAMwC,MAAMZ,GAAO6B,MAAQzE,KAAKgB,MAAMyC,aAI9CzD,KAAKqB,SAAS,SAACC,GAEb,OADAA,EAAckC,MAAMZ,GAAO6B,MAAQnD,EAAckC,MAAMZ,GAAO6B,KACvDnD,IAGTtB,KAAKqB,SAAS,SAACC,GAEb,OADAgE,EAAKG,YAAYnE,GACVA,8CAKTH,QAAQC,IAAI,SACZpB,KAAK4D,YACL5D,KAAKqB,SAAS,SAACC,GAKb,OAJAA,EAAcmC,YAAa,EAC3BnC,EAAcqC,UAAYhD,EAAWC,QACrCU,EAAciB,UAAY,EAC1BjB,EAAcoE,cAAe,EACtBpE,qCAIH,IAAAqE,EAAA3F,KACFwD,EAAQxD,KAAKgB,MAAMwC,MAEvB,OAEEnD,EAAAC,EAAAC,cAAA,OAAKR,UAAU,aACbM,EAAAC,EAAAC,cAAA,OAAKR,UAAU,QACbM,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0BACLF,EAAAC,EAAAC,cAAA,OAAKR,UAAU,oBACbM,EAAAC,EAAAC,cAACqF,EAAD,CACErD,UAAYvC,KAAKgB,MAAMuB,YACzBlC,EAAAC,EAAAC,cAACsF,EAAD,CACEtD,UAAWvC,KAAKgB,MAAMuB,YACxBlC,EAAAC,EAAAC,cAACuF,EAAD,CACE9E,MAAQhB,KAAKgB,MAAM2C,YAErBtD,EAAAC,EAAAC,cAAA,OACEwF,QAAS/F,KAAKgG,eAAeC,KAAKjG,OAElCK,EAAAC,EAAAC,cAAC2F,EAAD,QAGJ7F,EAAAC,EAAAC,cAAA,MAAIR,UAAU,QAEVyD,EAAMd,IAAI,SAACoC,EAAMlC,GAAP,OAERvC,EAAAC,EAAAC,cAAA,MAAIsC,IAAOD,EAAOuD,WAAYvD,EAC1BmD,QAASJ,EAAKS,aAAaH,KAAKN,IAElCtF,EAAAC,EAAAC,cAAC8F,EAAD,CACEnG,WAAc4E,EAAKL,KACnBhE,SAAYqE,EAAKnC,KACjBxC,UAAa2E,EAAKJ,MAClBtE,UAAa0E,EAAKH,aAS9BtE,EAAAC,EAAAC,cAAA,OAAKR,UAAU,qBACbM,EAAAC,EAAAC,cAAC+F,EAAD,CACEpD,aAAyC,UAAzBlD,KAAKgB,MAAM2C,YAC7BtD,EAAAC,EAAAC,cAAA,UAAQR,UAAU,SAEhBgG,QAAS/F,KAAKgG,eAAeC,KAAKjG,OAFpC,wBAnNSU,aCIJ6F,mLARX,OACElG,EAAAC,EAAAC,cAAA,OAAKR,UAAU,OACbM,EAAAC,EAAAC,cAACiG,EAAD,cAJU9F,aCME+F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlC,MACvB,2DCZNmC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8f430960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './Card2.css';\nimport PropTypes from 'prop-types'\n\nclass Card2 extends Component{\n\n  static propTypes = {\n    cardOpened: PropTypes.bool.isRequired,\n    cardMatch: PropTypes.bool.isRequired,\n    cardIcon: PropTypes.string.isRequired,\n    cardError: PropTypes.bool.isRequired\n  }\n\n  render(){\n    \n    let className = this.props.cardOpened ? \"open\": \"\"\n    let cardMatch = this.props.cardMatch ? \"match\": \"\"\n    let cardError = this.props.cardError ? \"error\": \"\"\n    \n    return(\n      <div className = {`card ${className} fa ${this.props.cardIcon} ${cardMatch} ${cardError}`}></div>\n    )\n  }\n}\n\nexport default Card2;\n","import React, {Component} from 'react';\nimport './Timer.css';\nimport PropTypes from 'prop-types'\n\nexport const TimerState = {\n  Initial: 'Initial',\n  Stated: 'Stated',\n  Ended: 'Ended'\n}\n\nclass Timer extends Component{\n  static propTypes = {\n    state: PropTypes.oneOf(Object.keys(TimerState)).isRequired\n  }\n\n  state = {\n    timeCounter:0\n  }\n\n  time1;\n  interval;\n\n  componentDidUpdate(prevProps) {\n\n    if (prevProps.state === this.props.state) {\n      return;\n    }\n\n    console.log(this.props.state)\n\n    if (this.props.state === TimerState.Initial) {\n      this.setState((previousState)=>{\n        previousState.timeCounter = 0\n        return previousState\n      })\n      clearInterval(this.interval)\n    } else if (this.props.state === TimerState.Stated) {\n      this.setupTimer()\n    } else if (this.props.state === TimerState.Ended) {\n      clearInterval(this.interval)\n    }\n  } \n\n  setupTimer(){\n    this.time1 = new Date()\n\n    this.interval = setInterval(()=>{\n      \n      let time2 = new Date()\n\n      const diff = time2.getTime() - this.time1.getTime();\n      let totalTime = Math.floor(diff/1000);\n      this.setState((previousState)=>{\n        previousState.timeCounter = totalTime;\n        return previousState\n      })\n      return totalTime;\n    }, 1000);   \n}\n\n  render(){\n\n    let finalTime = this.state.timeCounter\n    return (\n      <span id=\"timer\">{`Timer: ${finalTime}`}</span>\n    )\n  }\n}\n\nexport default Timer","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport './Score.css';\n\n\n\n\nclass Score extends Component{\n\n  static propTypes = {\n    movements: PropTypes.number.isRequired,\n  }\n\n  // state ={\n  //   starNumbers:3\n  // }\n\n  // starScore(){\n  //   this.setState((previousState)=>{\n  //     previousState.stars.splice(0, 1)\n  //     previousState.stars.push(\"fa-star-o\")\n  //     return previousState\n  //   })\n  //   return\n  // }\n\n  stars\n\n  scoreDown(){\n    let movesCounting = this.props.movements\n\n    if(movesCounting>=0 && movesCounting < 4){\n      this.stars =  [\"fa-star\", \"fa-star\", \"fa-star\"]\n      return this.stars\n\n    } else if(movesCounting >= 4 && movesCounting<6){\n      this.stars =  [\"fa-star\", \"fa-star\", \"fa-star-o\"]\n      return this.stars\n\n    }else if(movesCounting>=6){\n      this.stars =  [\"fa-star\", \"fa-star-o\", \"fa-star-o\"]\n      return this.stars\n    }  \n  }\n\n  render(){\n    let stars = this.scoreDown()\n\n    return(\n      <span>\n        <ul className=\"stars\">\n          {\n            stars.map((icon, index)=>(\n              <li className={`fa ${icon}`} key= {`star${index}`}></li>\n            ))\n          }\n        </ul>\n      </span>\n    )\n  }\n}\n\nexport default Score","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nclass Moves extends Component{\n  static propTypes = {\n    movements: PropTypes.number.isRequired\n  }\n\n  render(){\n    let moves = this.props.movements>1 ? \"moves\": \"move\"\n    return(\n      <span className=\"moves\">{`${this.props.movements} ${moves}`}</span>\n    )\n  }\n}\n\nexport default Moves","import React, {Component} from 'react';\nimport './StateReset.css';\n\nclass StateReset extends Component{\n  render(){\n    return(\n      <div className=\"fa fa-repeat restart\"></div>\n    )\n  }\n}\n\nexport default StateReset","import React, {Component} from 'react';\nimport './Congrats.css';\nimport PropTypes from 'prop-types'\n\nclass CongratsPage extends Component{\n\n  static propTypes = {\n    starResult: PropTypes.number.isRequired,\n    movesDone: PropTypes.number.isRequired,\n    timeDone: PropTypes.number.isRequired, \n    isItFinished: PropTypes.bool.isRequired\n\n  }\n\n  state = {\n\n  }\n\n  phrase(){\n    console.log(this.props.isItFinished)\n    let starResult = this.props.starResult\n    if(starResult === 3){\n      return \"Amazing!\"\n    } else if (starResult === 2){\n      return \"Not too bad! :)\"\n    } else if(starResult === 1){\n      return \"Could be better, try again! :)\"\n    } else if(starResult === 0){\n      return \"That's a shame! Try again! :)\"\n    }\n\n  }\n\n\n\n  render(){\n    return(\n      <div className=\"congratsDiv\">\n         <h1>Congratulations</h1>\n         <h2>You won!</h2>\n\n         <p>{`You did ${this.props.movesDone} moves and ${this.props.starResult} stars`}  </p>\n         <p>{`Total time: ${this.props.timeDone} seconds`}</p>\n         <p>{`${this.phrase()}`}</p>\n      </div>\n    )\n  }\n}\n\nexport default CongratsPage","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport './Deck.css';\nimport Card2 from '../Card2/Card2'\nimport Timer, {TimerState} from '../Timer/Timer'\nimport Score from '../Score/Score'\nimport Moves from '../Moves/Moves'\nimport StateReset from '../StateReset/StateReset'\nimport CongratsPage from '../CongratsPage/Congrats'\n\n\n\nclass Deck extends Component {\n\n  static propTypes = {\n    // starResult: PropTypes.number.isRequired\n  }\n\n  state = {\n    cards:[],      \n    deckLocked: false,  \n    cardQuantity: 6,\n    gameState: TimerState.Initial,\n    movements:0,\n\n    starResult:0,\n    movesDone: 0,\n    timeDone:0,\n    // isItFinished: false\n  }\n\n  componentDidMount(){\n    this.setupDeck()\n  }\n\n  setupDeck(){\n\n    let cardsIconOption = [\"fa-diamond\", \"fa-paper-plane-o\", \"fa-anchor\", \"fa-bolt\", \"fa-cube\", \"fa-leaf\", \"fa-bicycle\", \n        \"fa-bomb\", \"fa-paw\", \"fa-reddit\", \"fa-institution\", \"fa-birthday-cake\", \"fa-cab\", \"fa-ambulance\", \n        \"fa-apple\", \"fa-bell\", \"fa-sun-o\", \"fa-moon-o\"]\n\n    let iconsNeeded = this.state.cardQuantity/2\n    let cardsIcons = []\n    for(var i = 0; i<iconsNeeded; i++){\n      cardsIcons.push(cardsIconOption[i])\n      cardsIcons.push(cardsIconOption[i])\n    }\n\n    // shuffle array of icons\n\n    function shuffle(array) {\n      var i = array.length,\n          j = 0,\n          temp;\n  \n      while (i--) {\n          j = Math.floor(Math.random() * (i+1));\n          // swap randomly chosen element with current element\n          temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n      }\n      return array;\n    }\n  \n    cardsIcons = shuffle(cardsIcons)\n\n    //defing cards on the deck\n    let cardOnDeck = []\n\n    function definingCardDeck(){\n      for (let i =0; i< cardsIcons.length; i++){\n        cardOnDeck.push({icon:`${cardsIcons[i]}`, open: false, match: false, error: false})\n      }\n    }\n    definingCardDeck()\n\n    this.setState((previousState)=>{\n      previousState.cards = cardOnDeck\n      return previousState\n    })\n  }\n  \n  // match cards \n  matchCards(array){\n    array.forEach((card) => {\n      card.open = true\n      card.match = true\n    })\n  }\n  //closing cards\n  closingCard(array){\n    array.forEach((card)=>{\n      if(card.open && !card.match){\n        card.open = false\n      } \n    })\n  }\n\n  updateCards(previousState){\n    if(previousState.gameState === TimerState.Initial){\n        previousState.gameState = TimerState.Stated\n      } \n\n    // counting the movements   \n    previousState.movements++\n\n    let cardsOpened = this.state.cards.filter((card) => {return card.open && !card.match})\n\n    if(cardsOpened.length>0){\n      cardsOpened.forEach((card)=>{\n        card.open = true\n      }) \n    }   \n\n    if(cardsOpened.length === 2){\n      // comparing 2 cards\n      if(cardsOpened[0].icon === cardsOpened[1].icon){\n        this.matchCards([cardsOpened[0], cardsOpened[1]])\n      } else { \n        let intervalId;\n        previousState.deckLocked = true\n        cardsOpened.forEach((card)=>{\n          card.error = true\n        })\n\n        intervalId = setInterval(()=>{\n          clearInterval(intervalId);\n          this.setState((previousState)=>{\n            this.closingCard(cardsOpened)\n            previousState.deckLocked = false\n            cardsOpened.forEach((card)=>{\n              card.error = false\n            })\n            return previousState;\n           })\n        }, 1000)\n      }\n    }\n\n    let allCardsMatch = this.state.cards.every((card)=>card.match)\n    if( allCardsMatch){\n      previousState.gameState = TimerState.Ended\n      previousState.isItFinished = true\n    }\n  }\n \n  onCardCliked(event){\n    let index = event.currentTarget.getAttribute(\"identifier\")\n\n    // Locking Deck\n    if(this.state.cards[index].open || this.state.deckLocked){\n      return\n    }\n    // closing card\n    this.setState((previousState)=>{\n      previousState.cards[index].open = !previousState.cards[index].open\n      return previousState\n    })\n    // gambiarra\n    this.setState((previousState)=>{\n      this.updateCards(previousState);\n      return previousState\n    })\n  }\n\n  onResetClicker(){\n    console.log(\"dfgh \")\n    this.setupDeck()\n    this.setState((previousState)=>{\n      previousState.deckLocked = false\n      previousState.gameState = TimerState.Initial\n      previousState.movements = 0\n      previousState.resetClicked = false\n      return previousState\n    })\n  }\n  \n  render(){\n    let cards = this.state.cards;\n\n    return(\n  \n      <div className=\"container\">\n        <div className=\"game\">\n          <div><h1>Memory Game</h1></div>\n          <div className=\"row score-painel\">\n            <Score\n              movements= {this.state.movements}></Score>\n            <Moves\n              movements={this.state.movements}></Moves>\n            <Timer \n              state= {this.state.gameState}>\n            </Timer>\n            <div\n              onClick={this.onResetClicker.bind(this)}\n            >\n              <StateReset></StateReset>\n            </div>\n          </div>\n          <ul className=\"deck\">\n            {\n              cards.map((card, index)=>(\n                \n                <li key = {index} identifier={index}\n                    onClick={this.onCardCliked.bind(this)}\n                    >\n                  <Card2 \n                    cardOpened = {card.open}\n                    cardIcon = {card.icon} \n                    cardMatch = {card.match}\n                    cardError = {card.error}\n                    >\n                  </Card2>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n\n        <div className=\"CongratsContainer\">\n          <CongratsPage\n            isItFinished = {this.state.gameState === \"ended\"? true: false}></CongratsPage>\n          <button className=\"button\"\n            // console.log(\"funfa\")\n            onClick={this.onResetClicker.bind(this)}>Play again!\n          </button>\n        </div>\n      </div> \n    )\n  }\n}\n\nexport default Deck;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Deck from '../src/components/Deck/Deck';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Deck></Deck>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}